swagger: '2.0'
info:
  description: |
    DevLifts Fitness App API
  version: 1.0.0
  title: DevLifts API
  termsOfService: http://swagger.io/terms/
  contact:
    email: jc@devlifts.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
# host: devlifts.swagger.io
# basePath: /v2
tags:
- name: fitness
  description: Fitness Tracker    
  externalDocs:
    description: Find out more
    url: http://swagger.io
# schemes:
# - http
paths:
  /user:
    post:
      tags:
      - user
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      produces:
      - application/json
      - application/xml
      parameters:
      - in: body
        name: body
        description: Created user object
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        default:
          description: successful operation
  /user/login:
    get:
      tags:
      - user
      summary: Logs user into the system
      operationId: loginUser
      produces:
      - application/json
      - application/xml
      parameters:
      - name: username
        in: query
        description: The user name for login
        required: true
        type: string
      - name: password
        in: query
        description: The password for login in clear text
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            type: string
          headers:
            X-Rate-Limit:
              type: integer
              format: int32
              description: calls per hour allowed by the user
            X-Expires-After:
              type: string
              format: date-time
              description: date in UTC when token expires
        400:
          description: Invalid username/password supplied
  /user/logout:
    get:
      tags:
      - user
      summary: Logs out current logged in user session
      operationId: logoutUser
      produces:
      - application/json
      - application/xml
      parameters: []
      responses:
        default:
          description: successful operation
  /user/{username}:
    get:
      tags:
      - user
      summary: Get user by user name
      operationId: getUserByName
      produces:
      - application/json
      - application/xml
      parameters:
      - name: username
        in: path
        description: The name that needs to be fetched. Use user1 for testing. 
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        400:
          description: Invalid username supplied
        404:
          description: User not found
    put:
      tags:
      - user
      summary: Updated user
      description: This can only be done by the logged in user.
      operationId: updateUser
      produces:
      - application/json
      - application/xml
      parameters:
      - name: username
        in: path
        description: name that need to be updated
        required: true
        type: string
      - in: body
        name: body
        description: Updated user object
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        400:
          description: Invalid user supplied
        404:
          description: User not found
    delete:
      tags:
      - user
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      produces:
      - application/json
      - application/xml
      parameters:
      - name: username
        in: path
        description: The name that needs to be deleted
        required: true
        type: string
      responses:
        400:
          description: Invalid username supplied
        404:
          description: User not found
securityDefinitions:
  devLifts_auth:
    type: oauth2
    authorizationUrl: http://devlifts.swagger.io/oauth/dialog
    flow: implicit
    scopes:
      write:user: modify your account, goals and 1rm
      read:1rm: read your 1rm and goals
  api_key:
    type: apiKey
    name: api_key
    in: header
definitions:
  User:
    type: object
    required:
    - username
    - email
    - password
    properties:
      username:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
        format: email
      password:
        type: string
      birthdate:
        type: string
        format: date
    xml:
      name: User
  Exercise:
    type: object
    required:
    - id
    - title
    properties:
      id:
        type: integer
        format: int32
        readOnly: true
      title:
        type: string
      description:
        type: string
      muscles:
        type: object
        properties:
          group:
            type: string
          primary:
            type: string
          secondary:
            type: array
            items:
              type: string
      variations:
        type: array
        items:
          type: string
  1RM:
    type: object
    required:
    - id
    properties:
      id:
        type: string
      dateAchieved:
        type: string
      exercise:
        $ref: '#/definitions/Exercise'
      weight:
        type: string
  Goals:
    type: object
    properties:
      General:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            goal_type:
              type: string
            value:
              type: string
      Exercise:
        type: array
        items:
          type: object
          properties:
            exercise:
              $ref: '#/definitions/Exercise'
            goal_type:
              type: string
            weight:
              type: integer        
  Muscle:
    type: object
    required:
    - id
    properties:
      id:
        type: string
      name:
        type: string
      group:
        type: string
  Resource:
    type: object
    required:
    - id
    properties:
      id:
        type: string
      name:
        type: string
      links:
        type: array
        items:
          type: string
  Workout:
    type: object
    required:
    - id
    properties:
      id:
        type: string
      meta:
        type: object
        properties:
          name:
            type: string
          energyBefore:
            type: string
          energyAfter:
            type: string
          completionTime:
            type: string
          notes:
            type: string
      exercises:
        type: array
        items:
          type: object
          properties:
            exercise:
              $ref: '#/definitions/Exercise'
            order:
              type: integer
            sets:
              type: array
              items:
                type: object
                properties:
                  order:
                    type: integer
                  weight: 
                    type: integer
                  reps:
                    type: integer
                  rpe:
                    type: integer
                  targets:
                    type: object
                    properties:
                      weight:
                        type: integer
                      reps:
                        type: integer
                      rpe:
                        type: integer
                  notes:
                    type: string
            notes:
              type: string
      notes:
        type: string
host: virtserver.swaggerhub.com
basePath: /DevLifts/FitnessTracker/1.0.0
schemes:
 - https
 - http